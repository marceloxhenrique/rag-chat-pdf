"use client";

import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "../../components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Send } from "lucide-react";

interface Message {
  sender: "user" | "system";
  text: string;
}

const placeholderMessages: Message[] = [
  { sender: "user", text: "What is LangChain?" },
  {
    sender: "system",
    text: "LangChain is a framework for developing applications powered by language models.",
  },
  { sender: "user", text: "How do I use Pinecone with OpenAI?" },
  {
    sender: "system",
    text: "You can use Pinecone as a vector database to store and query embeddings generated by OpenAI.",
  },
  { sender: "user", text: "How do I use Pinecone with OpenAI?" },
  { sender: "user", text: "What is LangChain?" },
  {
    sender: "system",
    text: "LangChain is a framework for developing applications powered by language models.",
  },
  { sender: "user", text: "How do I use Pinecone with OpenAI?" },
  {
    sender: "system",
    text: "LangChain is a framework for developing applications powered by language models.",
  },
  { sender: "user", text: "How do I use Pinecone with OpenAI?" },
  {
    sender: "system",
    text: "LangChain is a framework for developing applications powered by language models.",
  },
  {
    sender: "user",
    text: "How do I use Pinecone with OpenAI? How do I use Pinecone with OpenAI? How do I use Pinecone with OpenAI?",
  },
];

export default function ChatBox() {
  const [messages, setMessages] = useState<Message[]>(placeholderMessages);
  const [input, setInput] = useState("");

  const handleSend = () => {
    if (!input.trim()) return;
    setMessages((prev) => [
      ...prev,
      { sender: "user", text: input },
      {
        sender: "system",
        text: "This is a placeholder response. Integration coming soon!",
      },
    ]);
    setInput("");
  };

  return (
    <Card className=" overflow-y-auto items-center rounded-none py-30 ">
      <CardContent className="space-y-10  w-full max-w-5xl">
        {messages.map((msg, idx) => (
          <div
            key={idx}
            className={`rounded-xl px-4 py-2 max-w-2xl whitespace-pre-wrap ${
              msg.sender === "user"
                ? "ml-auto bg-primary text-white dark:text-black"
                : "mr-auto  text-muted-foreground"
            }`}
          >
            {msg.text}
          </div>
        ))}
      </CardContent>
      <div className="flex gap-2 fixed justify-center w-full px-2 sm:px-20 bottom-0 bg-card h-20">
        <Input
          className="max-w-5xl h-15 bg-neutral-200"
          placeholder="Ask something..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyDown={(e) => e.key === "Enter" && handleSend()}
        />
        <Button onClick={handleSend} className="h-15 w-14">
          <Send className="w-6 h-4" />
        </Button>
      </div>
    </Card>
  );
}
